The ``0-add_integer`` module
===========================

Using ``add_integer``
---------------------

This a test file for the add_integer function:
    >>> add_integer = __import__('0-add_integer').add_integer

    >>> print(add_integer(1, 2))
    3

    >>> print(add_integer(1.5, 1.5))
    2

    >>> print(add_integer(-1.5, -1.5))
    -2

    >>> print(add_integer(1987, -884))
    1103

    >>> type(add_integer(1.8, 7.5))
    <class 'int'>

    >>> print(add_integer(2))
    100

    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer("str", "str"))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(5, "str"))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
